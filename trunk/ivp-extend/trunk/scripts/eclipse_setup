#!/bin/bash
set -e

ECLIPSE_DIR=$HOME/eclipse
WORKSPACE_DIR=$HOME/workspace
PROJECT_DIR=$HOME

HELP=false
COPY_WORKBENCH=true

for ARGI; do
    UNDEFINED_ARG=$ARGI
    if [ "${ARGI}" = "--help" -o "${ARGI}" = "-h" ] ; then
        HELP=true
        UNDEFINED_ARG=""
    elif [ "${ARGI:0:14}" = "--eclipse-dir=" ] ; then
        ECLIPSE_DIR="${ARGI#--eclipse-dir=*}"
        UNDEFINED_ARG=""
    elif [ "${ARGI:0:16}" = "--workspace-dir=" ] ; then
        WORKSPACE_DIR="${ARGI#--workspace-dir=*}"
        UNDEFINED_ARG=""
    elif [ "${ARGI:0:14}" = "--project-dir=" ] ; then
        PROJECT_DIR="${ARGI#--project-dir=*}"
        UNDEFINED_ARG=""
    elif [ "${ARGI}" = "--copy-workbench" -o "${ARGI}" = "-c" ] ; then
        COPY_WORKBENCH="true"
        UNDEFINED_ARG=""
    fi
done

if [ "${#}" = "0" ] ; then
    HELP=true
fi

if $HELP ; then
    printf "Usage: hover_update [location] [-j4] [options]\n"
    printf "Options:                                      \n"
    printf "  --eclipse-dir=[$HOME/eclipse]         directory where eclipse can be found \n"
    printf "  --workspace-dir=[$HOME/workspace]     workspace directory to use           \n"
    printf "  --project-dir=[$HOME]                 location of moos, ivp, goby, and hovergroup\n"
    printf "  --copy-workbench, -c                  copy workbench (perspectives)        \n"
    exit 1;
fi

if [ ! -d "$PROJECT_DIR/moos-ivp" ] ; then
    printf "Could not find $PROJECT_DIR/moos-ivp. \n"
    exit 1;
fi
if [ ! -d "$PROJECT_DIR/moos" ] ; then
    printf "Could not find $PROJECT_DIR/moos. \n"
    exit 1;
fi
if [ ! -d "$PROJECT_DIR/goby" ] ; then
    printf "Could not find $PROJECT_DIR/goby. \n"
    exit 1;
fi
if [ ! -d "$PROJECT_DIR/hovergroup" ] ; then
    printf "Could not find $PROJECT_DIR/hovergroup. \n"
    exit 1;
fi
if [ ! -d "$WORKSPACE_DIR" ] ; then
    printf "Workspace directory does not exist. \n"
    exit 1;
fi
if [ ! -d "$ECLIPSE_DIR" ] ; then
    printf "Eclipse directory does not exist. \n"
    exit 1;
fi

PROJECT_FILES_DIR="$PROJECT_DIR/hovergroup/ivp-extend/project_files/"
cp $PROJECT_FILES_DIR/core-moos.project $PROJECT_DIR/moos/core-moos/.project
cp $PROJECT_FILES_DIR/geodesy-moos.project $PROJECT_DIR/moos/geodesy-moos/.project
cp $PROJECT_FILES_DIR/ivp.project $PROJECT_DIR/moos-ivp/ivp/src/.project
cp $PROJECT_FILES_DIR/goby.project $PROJECT_DIR/goby/.project
cp $PROJECT_FILES_DIR/trunk.project $PROJECT_DIR/hovergroup/ivp-extend/trunk/.project
cp $PROJECT_FILES_DIR/josh.project $PROJECT_DIR/hovergroup/ivp-extend/josh/.project

$ECLIPSE_DIR/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $PROJECT_DIR/moos/core-moos -data $WORKSPACE_DIR
$ECLIPSE_DIR/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $PROJECT_DIR/moos/geodesy-moos -data $WORKSPACE_DIR
$ECLIPSE_DIR/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $PROJECT_DIR/moos-ivp/ivp/src -data $WORKSPACE_DIR
$ECLIPSE_DIR/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $PROJECT_DIR/goby -data $WORKSPACE_DIR
$ECLIPSE_DIR/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $PROJECT_DIR/hovergroup/ivp-extend/trunk -data $WORKSPACE_DIR
$ECLIPSE_DIR/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import $PROJECT_DIR/hovergroup/ivp-extend/josh -data $WORKSPACE_DIR

if $COPY_WORKBENCH ; then
    mv "$WORKSPACE_DIR/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi" "$WORKSPACE_DIR/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi.bck"
    cp "$PROJECT_FILES_DIR/workbench.xmi" "$WORKSPACE_DIR/.metadata/.plugins/org.eclipse.e4.workbench/workbench.xmi"
fi